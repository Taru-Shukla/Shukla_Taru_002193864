/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;


import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Person;
import model.PersonDirectory;
import model.VitalSignHistory;
import model.VitalSigns;

/**
 *
 * @author tarushukla
 */
public class AddPatientJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddPatientJPanel
     */
    
    int row, column;
    DefaultTableModel defaultTableModel;
    VitalSignHistory vitalSignHistory;
    PersonDirectory personDirectory;
    
    
    public AddPatientJPanel(VitalSignHistory vitalSignHistory,PersonDirectory personDirectory) {
        initComponents();
        this.vitalSignHistory = vitalSignHistory;
        this.personDirectory = personDirectory;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblContactNumber = new javax.swing.JLabel();
        txtPatientContactNumber = new javax.swing.JTextField();
        lblPatientClinicNumber = new javax.swing.JLabel();
        txtPatientClinicId = new javax.swing.JTextField();
        lblBodyTemperature2 = new javax.swing.JLabel();
        lblBloodPressureSystolic = new javax.swing.JLabel();
        lblHeartRate2 = new javax.swing.JLabel();
        lblBodyWeight2 = new javax.swing.JLabel();
        lblDate2 = new javax.swing.JLabel();
        txtVisitDate = new javax.swing.JTextField();
        txtPatientBodyWeight = new javax.swing.JTextField();
        txtPatientHeartRate = new javax.swing.JTextField();
        txtPatientBloodPressureSystolic = new javax.swing.JTextField();
        txtPatientBodyTemperature = new javax.swing.JTextField();
        btnAddPatient = new javax.swing.JButton();
        lblBloodPressureDiastolic = new javax.swing.JLabel();
        txtPatientBloodPressureDiastolic = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePatientDirectoryData = new javax.swing.JTable();

        setBackground(new java.awt.Color(102, 102, 102));

        lblContactNumber.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblContactNumber.setText("Contact Number");

        lblPatientClinicNumber.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblPatientClinicNumber.setText("Patient ID");

        lblBodyTemperature2.setText("Body Temperature");

        lblBloodPressureSystolic.setText("Blood Pressure Systolic");

        lblHeartRate2.setText("Heart Rate");

        lblBodyWeight2.setText("Body Weight");

        lblDate2.setText("Date");

        btnAddPatient.setText("Add Patient");
        btnAddPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPatientActionPerformed(evt);
            }
        });

        lblBloodPressureDiastolic.setText("Blood Pressure Diastolic");

        txtPatientBloodPressureDiastolic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientBloodPressureDiastolicActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblBloodPressureSystolic)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPatientBloodPressureSystolic, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblContactNumber)
                                    .addComponent(lblPatientClinicNumber)
                                    .addComponent(lblBodyTemperature2))
                                .addGap(42, 42, 42)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPatientBodyTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPatientClinicId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPatientContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblBloodPressureDiastolic)
                                    .addComponent(lblHeartRate2)
                                    .addComponent(lblBodyWeight2)
                                    .addComponent(lblDate2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPatientBodyWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPatientHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPatientBloodPressureDiastolic, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtVisitDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(333, 333, 333)
                        .addComponent(btnAddPatient)))
                .addContainerGap(515, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblContactNumber)
                    .addComponent(txtPatientContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientClinicNumber)
                    .addComponent(txtPatientClinicId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBodyTemperature2)
                    .addComponent(txtPatientBodyTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBloodPressureSystolic)
                    .addComponent(txtPatientBloodPressureSystolic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBloodPressureDiastolic)
                    .addComponent(txtPatientBloodPressureDiastolic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHeartRate2)
                    .addComponent(txtPatientHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBodyWeight2)
                    .addComponent(txtPatientBodyWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVisitDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDate2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnAddPatient)
                .addGap(161, 161, 161))
        );

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("ADD PATIENT");

        jTablePatientDirectoryData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Gender", "Contact", "Residence", "Community", "City", "Patient Id", "Body Temperature", "Systolic BP", "Diastolic BP", "Heart Rate", "Body Weight", "Date"
            }
        ));
        jScrollPane2.setViewportView(jTablePatientDirectoryData);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(439, 439, 439)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(343, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPatientActionPerformed
        // TODO add your handling code here:
//        for(VitalSigns vitalSigns : vitalSignHistory.getVitalSignArrayList()){
//            
//            if(txtPatientClinicId.getText().equalsIgnoreCase(String.valueOf(vitalSigns.getPatientId()))){
//                JOptionPane.showMessageDialog(this, "Duplicate Patient Id Found! Patient Id must be Unique!");
//                return;
//            } 
//        }
        if(txtPatientClinicId.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Patient Id is empty!");
        return;
        }
//                JOptionPane.showMessageDialog(this, "Duplicate Patient Id Found! Patient Id must be Unique!");
//                return;
//            } 
//        }
//        String patientName =txtPatientName.getText();
//        int patientAge = Integer.parseInt(txtPatientAge.getText());
//
//        String gender="";
//        if((jRadioButtonPMale.isSelected()==false)&&(jRadioButtonPFemale.isSelected()==false)&&(jRadioButtonPOthers.isSelected()==false)){
//            JOptionPane.showMessageDialog(null,"Please select radio button");
//
//        }else{
//            if (jRadioButtonPMale.isSelected()) {
//                gender="Male";
//            }else if(jRadioButtonPFemale.isSelected()){
//                gender="Female";
//            }else if (jRadioButtonPOthers.isSelected()){
//                gender="Other";
//            }}
//            long contactNumber= Long.parseLong(txtPatientContactNumber.getText());
//            String cityName= comboBoxPatientCity.getSelectedItem().toString();
//            String CommunityName = comboBoxPatientCommunity.getSelectedItem().toString();
//            String residence = txtPatientResidence.getText();
            
            long contactNumber= Long.parseLong(txtPatientContactNumber.getText());
            int patientClinicId = Integer.parseInt(txtPatientClinicId.getText());

            double bodyTemperature = Double.parseDouble(txtPatientBodyTemperature.getText());
            double bloodPressureSystolic = Double.parseDouble(txtPatientBloodPressureSystolic.getText());
            double bloodPressureDiastolic = Double.parseDouble(txtPatientBloodPressureDiastolic.getText());
            double heartRate = Double.parseDouble(txtPatientHeartRate.getText());
            double bodyWeight = Double.parseDouble(txtPatientBodyWeight.getText());
            String date = txtVisitDate.getText();

            VitalSigns uc = vitalSignHistory.addNewPatient();
            
            for (int i = 0; i < personDirectory.getPersonDirectoryArrayList().size(); i++) {
                
                long contactCheck =personDirectory.getPersonDirectoryArrayList().get(i).getContactNumber();
                contactNumber= Long.parseLong(txtPatientContactNumber.getText());
                //long contactNumber= Long.parseLong(txtPatientContactNumber.getText());
                String contactNumberString=String.valueOf(contactNumber);
                String contactCheckString=String.valueOf(contactCheck);
//                System.out.println(contactNumberString +"Line 290");
//                System.out.println(contactCheckString +"Line 291");
                
                if (contactNumberString.equalsIgnoreCase(contactCheckString)) {
                    uc.setPatientName(personDirectory.getPersonDirectoryArrayList().get(i).getPersonName());
                    uc.setPatientAge(personDirectory.getPersonDirectoryArrayList().get(i).getPersonAge());
                    uc.setPatientGender(personDirectory.getPersonDirectoryArrayList().get(i).getGender());
                    uc.setContactNumber(personDirectory.getPersonDirectoryArrayList().get(i).getContactNumber());
                    uc.setResidence(personDirectory.getPersonDirectoryArrayList().get(i).getHouseAddress());
                    uc.setCommunity(personDirectory.getPersonDirectoryArrayList().get(i).getCommunityName());
                    uc.setCity(personDirectory.getPersonDirectoryArrayList().get(i).getCityName());
                    uc.setPatientId(patientClinicId);
//                    uc.setContactNumber(contactNumber);
                    uc.setBodyTemperature(bodyTemperature);
                    uc.setBloodPressureSystolic(bloodPressureSystolic);
                    uc.setBloodPressureDiastolic(bloodPressureDiastolic);
                    uc.setHeartRate(heartRate);
                    uc.setWeight(bodyWeight);
                    uc.setDate(date);

                    JOptionPane.showMessageDialog(this, "New Person Details Added");
                    
                    clearField();
                    
                    
                } else if (contactNumber!=contactCheck) {
                        JOptionPane.showMessageDialog(this, "Record Not Found");
                        return;
                    }
                    populatePatientTable();
        }
            
    }//GEN-LAST:event_btnAddPatientActionPerformed

    private void txtPatientBloodPressureDiastolicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientBloodPressureDiastolicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientBloodPressureDiastolicActionPerformed
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPatient;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTablePatientDirectoryData;
    private javax.swing.JLabel lblBloodPressureDiastolic;
    private javax.swing.JLabel lblBloodPressureSystolic;
    private javax.swing.JLabel lblBodyTemperature2;
    private javax.swing.JLabel lblBodyWeight2;
    private javax.swing.JLabel lblContactNumber;
    private javax.swing.JLabel lblDate2;
    private javax.swing.JLabel lblHeartRate2;
    private javax.swing.JLabel lblPatientClinicNumber;
    private javax.swing.JTextField txtPatientBloodPressureDiastolic;
    private javax.swing.JTextField txtPatientBloodPressureSystolic;
    private javax.swing.JTextField txtPatientBodyTemperature;
    private javax.swing.JTextField txtPatientBodyWeight;
    private javax.swing.JTextField txtPatientClinicId;
    private javax.swing.JTextField txtPatientContactNumber;
    private javax.swing.JTextField txtPatientHeartRate;
    private javax.swing.JTextField txtVisitDate;
    // End of variables declaration//GEN-END:variables

    private void populatePatientTable() {
        defaultTableModel = (DefaultTableModel)jTablePatientDirectoryData.getModel();
        defaultTableModel.setRowCount(0);
        
        for(VitalSigns uc : vitalSignHistory.getVitalSignArrayList()){
            Object[] row = new Object[14];
            row[0]= uc;
            row[1]= uc.getPatientAge();
            row[2]= uc.getPatientGender();
            row[3]= uc.getContactNumber();
            row[4]= uc.getResidence();
            row[5]= uc.getCommunity();
            row[6]= uc.getCity();
            row[7]= uc.getPatientId();
            row[8]= uc.getBodyTemperature();
            row[9]= uc.getBloodPressureSystolic();
            row[10]= uc.getBloodPressureDiastolic();
            row[11]= uc.getHeartRate();
            row[12]=uc.getWeight();
            row[13]= uc.getDate();
            defaultTableModel.addRow(row); 
        }  
    }

    private void clearField() {
//        txtPatientName.setText("");
//        txtPatientAge.setText("");
        txtPatientContactNumber.setText("");
//        txtPatientResidence.setText("");
//        comboBoxPatientCity.setSelectedIndex(-1);
//        comboBoxPatientCommunity.setSelectedIndex(-1);
        txtPatientClinicId.setText("");
        txtPatientBodyTemperature.setText("");
        txtPatientBloodPressureSystolic.setText("");
        txtPatientBloodPressureDiastolic.setText("");
        txtPatientHeartRate.setText("");
        txtPatientBodyWeight.setText("");
        txtVisitDate.setText("");
    }  
}
