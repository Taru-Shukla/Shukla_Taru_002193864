/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import model.PatientMedicalDetails;
import model.PatientPersonalDetails;

/**
 *
 * @author tarushukla
 */
public class DirectoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DirectoryJPanel
     */
//     private JTable table;
//   private TableColumn tColumn;
    PatientMedicalDetails patientMedicalDetails;
    DefaultTableModel model;
    PatientPersonalDetails details;
    public DirectoryJPanel(PatientMedicalDetails patientMedicalDetails) {
        initComponents();
         this.patientMedicalDetails= patientMedicalDetails;
         populateVitalTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatientDirectory = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblBodyTemp = new javax.swing.JLabel();
        lblPulseRate = new javax.swing.JLabel();
        lblRespirationRate = new javax.swing.JLabel();
        lblBP = new javax.swing.JLabel();
        txtBodyTemp = new javax.swing.JTextField();
        txtRespirationRate = new javax.swing.JTextField();
        txtPulseRate = new javax.swing.JTextField();
        txtBP = new javax.swing.JTextField();

        tblPatientDirectory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Health Plan Id", "Name", "Age", "Gender", "Neighborhood", "City", "Address", "Date Of Birth", "Body Temperature", "Pulse Rate", "Respiration Rate", "Blood Pressure"
            }
        ));
        tblPatientDirectory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPatientDirectoryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPatientDirectory);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblBodyTemp.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblBodyTemp.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblBodyTemp.setText("Body Temperature");

        lblPulseRate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblPulseRate.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblPulseRate.setText("Pulse Rate");

        lblRespirationRate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblRespirationRate.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblRespirationRate.setText("Respiration Rate");

        lblBP.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblBP.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblBP.setText("Blood Pressure");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(397, 397, 397)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblBP, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRespirationRate, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPulseRate, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBodyTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBodyTemp, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(txtPulseRate)
                            .addComponent(txtRespirationRate)
                            .addComponent(txtBP))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBodyTemp)
                    .addComponent(txtBodyTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPulseRate)
                    .addComponent(txtPulseRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRespirationRate)
                    .addComponent(txtRespirationRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBP)
                    .addComponent(txtBP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(111, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblPatientDirectoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientDirectoryMouseClicked
        // TODO add your handling code here:
         try{
        int selectedRow = tblPatientDirectory.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)tblPatientDirectory.getModel();

        txtBodyTemp.setText(model.getValueAt(selectedRow,9).toString());
        txtPulseRate.setText(model.getValueAt(selectedRow,10).toString());
       txtRespirationRate.setText(model.getValueAt(selectedRow,11).toString());
        txtBP.setText(model.getValueAt(selectedRow,12).toString());
         } catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_tblPatientDirectoryMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
          int selectedRowIndex = tblPatientDirectory.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)tblPatientDirectory.getModel();

        if(selectedRowIndex>=0){
            model.setValueAt(txtBodyTemp.getText(),selectedRowIndex,9);
            model.setValueAt(txtPulseRate.getText(),selectedRowIndex,10);
            model.setValueAt(txtRespirationRate.getText(),selectedRowIndex,11);
            model.setValueAt(txtBP.getText(),selectedRowIndex,12);
            
        }else
        {
                        JOptionPane.showMessageDialog(this, "Please select a row to update!");

        }
        txtBodyTemp.setText("");
        txtPulseRate.setText("");
        txtRespirationRate.setText("");
        txtBP.setText("");
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex =tblPatientDirectory.getSelectedRow();

      if(selectedRowIndex<0){
         JOptionPane.showMessageDialog(this,"Please select a row to delete.");
         return;
           }
         DefaultTableModel model =(DefaultTableModel) tblPatientDirectory.getModel();
         PatientPersonalDetails selectedUber = (PatientPersonalDetails) model.getValueAt(selectedRowIndex,0);

        patientMedicalDetails.deleteDetails(selectedUber);

        JOptionPane.showMessageDialog(this,"Patient details deleted.");

        populateVitalTable();
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBP;
    private javax.swing.JLabel lblBodyTemp;
    private javax.swing.JLabel lblPulseRate;
    private javax.swing.JLabel lblRespirationRate;
    private javax.swing.JTable tblPatientDirectory;
    private javax.swing.JTextField txtBP;
    private javax.swing.JTextField txtBodyTemp;
    private javax.swing.JTextField txtPulseRate;
    private javax.swing.JTextField txtRespirationRate;
    // End of variables declaration//GEN-END:variables

    private void populateVitalTable() {
//         
//   
//        Float maxBodyTemp = 99.0f;
//Float minBodyTemp = 97.8f;
          model = (DefaultTableModel)tblPatientDirectory.getModel();
        model.setRowCount(0);
  
        for(PatientPersonalDetails uds: patientMedicalDetails.getPatientMedicalDetails()){
            
            Object[] row = new Object[13];
            row[0]=uds;
            row[1]=uds.getHealthPlanId();
            row[2]=uds.getName();
            row[3]=uds.getAge();
            row[4]=uds.getGender();
            row[5]=uds.getNeighborhood();
            row[6]=uds.getCity();
            row[7]=uds.getAddress();
            row[8]=uds.getDOB();
            row[9]=uds.getBodyTemp();
            row[10]=uds.getPulseRate();
            row[11]=uds.getRespirationRate();
            row[12]=uds.getBloodPressure();
            model.addRow(row);

        }
    }
}
