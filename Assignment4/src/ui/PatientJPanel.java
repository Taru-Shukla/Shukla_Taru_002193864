/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import model.PatientMedicalDetails;
import model.PatientPersonalDetails;

/**
 *
 * @author tarushukla
 */
public class PatientJPanel extends javax.swing.JPanel {

    /**
     * Creates new form patientJPanel
     */
    PatientMedicalDetails patientMedicalDetails;
    public PatientJPanel(PatientMedicalDetails patientMedicalDetails) {
        initComponents();
        this.patientMedicalDetails = patientMedicalDetails;
         cityCombo.setSelectedItem(null);
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblHealthPlanId = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblNeighborhood = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        lblDOB = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        txtAge = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtHealthPlanId = new javax.swing.JTextField();
        txtDOB = new javax.swing.JTextField();
        jRadioBtnFemale = new javax.swing.JRadioButton();
        jRadioBtnMale = new javax.swing.JRadioButton();
        cityCombo = new javax.swing.JComboBox<>();
        neighborhoodCombo = new javax.swing.JComboBox<>();

        lblHealthPlanId.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblHealthPlanId.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblHealthPlanId.setText("Health Plan Id");

        lblName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblName.setText("Name");

        lblAge.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblAge.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblAge.setText("Gender");

        lblGender.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblGender.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblGender.setText("Age");

        lblNeighborhood.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblNeighborhood.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblNeighborhood.setText("City");

        lblCity.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblCity.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblCity.setText("Neighborhood");

        lblAddress.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblAddress.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblAddress.setText("Date of Birth");

        lblDOB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblDOB.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblDOB.setText("Address");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioBtnFemale);
        jRadioBtnFemale.setText("Female");

        buttonGroup1.add(jRadioBtnMale);
        jRadioBtnMale.setText("Male");
        jRadioBtnMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioBtnMaleActionPerformed(evt);
            }
        });

        cityCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boston", "Worcester", "Springfield", "Cambridge", "Lowell" }));
        cityCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(117, 117, 117)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblHealthPlanId, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtHealthPlanId, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jRadioBtnFemale)
                                    .addGap(39, 39, 39)
                                    .addComponent(jRadioBtnMale))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblNeighborhood, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(neighborhoodCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(309, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHealthPlanId, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHealthPlanId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioBtnFemale)
                    .addComponent(jRadioBtnMale))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNeighborhood, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(neighborhoodCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(239, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String date = new SimpleDateFormat("yyyy/MM/dd").format(Calendar.getInstance().getTime());
        String healthPlan = txtHealthPlanId.getText();
        String name = txtName.getText();
        Integer age = Integer.parseInt(txtAge.getText());
        String gender = null;
          if(jRadioBtnFemale.isSelected()){
            gender= jRadioBtnFemale.getText();
        }else if(jRadioBtnMale.isSelected()){
           gender= jRadioBtnMale.getText();

        }
        String neighborhood = neighborhoodCombo.getSelectedItem().toString();
        String city = cityCombo.getSelectedItem().toString();
        String address = txtAddress.getText();
        String dob = txtDOB.getText();
        
        for(PatientPersonalDetails ppd : patientMedicalDetails.getPatientMedicalDetails()){
           if(txtHealthPlanId.getText().equalsIgnoreCase(ppd.getHealthPlanId())){
               JOptionPane.showMessageDialog(this, "This Health Plan Number is already registered! Go to Patient Vital section.","WARNING!",JOptionPane.WARNING_MESSAGE);
               return;
           }
       }
          PatientPersonalDetails ppd = patientMedicalDetails.addNewDetails();
        if(!healthPlan.isEmpty()){
               ppd.setHealthPlanId(healthPlan);  
          }
          else{
               JOptionPane.showMessageDialog(this, "Health Plan Number is empty","ERROR",JOptionPane.ERROR_MESSAGE);
               return;
        }
         if(!name.isEmpty()){
               ppd.setName(name);  
          }
          else{
               JOptionPane.showMessageDialog(this, "Name is empty","ERROR",JOptionPane.ERROR_MESSAGE);
               return;
        }
          if(!age.toString().isEmpty()){
               ppd.setAge(age);  
          }
          else{
               JOptionPane.showMessageDialog(this, "Age is empty","ERROR",JOptionPane.ERROR_MESSAGE);
               return;
        }
           if(!gender.isEmpty()){
               ppd.setGender(gender);  
          }
          else{
               JOptionPane.showMessageDialog(this, "Gender is not provided","ERROR",JOptionPane.ERROR_MESSAGE);
               return;
        }
            if(!address.isEmpty()){
               ppd.setAddress(address);  
          }
          else{
               JOptionPane.showMessageDialog(this, "Address is empty","ERROR",JOptionPane.ERROR_MESSAGE);
               return;
        }
             if(!neighborhood.isEmpty()){
               ppd.setNeighborhood(neighborhood);  
          }
          else{
               JOptionPane.showMessageDialog(this, "Neighborhood is empty","ERROR",JOptionPane.ERROR_MESSAGE);
               return;
        }   if(!city.isEmpty()){
               ppd.setCity(city);  
          }
          else{
               JOptionPane.showMessageDialog(this, "City is empty","ERROR",JOptionPane.ERROR_MESSAGE);
               return;
        }   if(!dob.toString().isEmpty()){
               ppd.setDOB(dob);  
          }
          else{
               JOptionPane.showMessageDialog(this, "Date of Birth is empty","ERROR",JOptionPane.ERROR_MESSAGE);
               return;
        }
        JOptionPane.showMessageDialog(this, "Patient Personal details added.");
      
        txtHealthPlanId.setText("");
        txtAddress.setText("");
        txtAge.setText("");
        txtDOB.setText("");
        txtName.setText("");

    }//GEN-LAST:event_btnSaveActionPerformed

    private void jRadioBtnMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioBtnMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioBtnMaleActionPerformed

    private void cityComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityComboActionPerformed
          try{
        if(cityCombo.getSelectedItem().equals("Boston")){
            
            neighborhoodCombo.removeAllItems();
            neighborhoodCombo.addItem("Back Bay");
            neighborhoodCombo.addItem("Downtown");
            neighborhoodCombo.addItem("Beacon hill");
            neighborhoodCombo.addItem("Brighton");
            neighborhoodCombo.addItem("Mission Hill");
            neighborhoodCombo.addItem("Jamaica Plain");
            neighborhoodCombo.addItem("Roxbury");
            neighborhoodCombo.setSelectedItem(null);
        } else if(cityCombo.getSelectedItem().equals("Worcester")){
            
            neighborhoodCombo.removeAllItems();
            neighborhoodCombo.addItem("West Side");
            neighborhoodCombo.addItem("Green Hill");
            neighborhoodCombo.addItem("Lincoln");
            neighborhoodCombo.addItem("Cider Mill");
            neighborhoodCombo.setSelectedItem(null);
        } else if(cityCombo.getSelectedItem().equals("Springfield")){
            
            neighborhoodCombo.removeAllItems();
            neighborhoodCombo.addItem("Pelham");
            neighborhoodCombo.addItem("Longmeadow");
            neighborhoodCombo.addItem("Northampton");
            neighborhoodCombo.addItem("Wilbraham");
            neighborhoodCombo.setSelectedItem(null);
        } else if(cityCombo.getSelectedItem().equals("Cambridge")){
            
            neighborhoodCombo.removeAllItems();
            neighborhoodCombo.addItem("MIT");
            neighborhoodCombo.addItem("Cambridgeport");
            neighborhoodCombo.addItem("Riverside");
            neighborhoodCombo.setSelectedItem(null);
        } else if(cityCombo.getSelectedItem().equals("Lowell")){
            
            neighborhoodCombo.removeAllItems();
            neighborhoodCombo.addItem("Pawtucketville");
            neighborhoodCombo.addItem("Belvidere");
            neighborhoodCombo.addItem("Centralville");
            neighborhoodCombo.setSelectedItem(null);
        }
        } catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_cityComboActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cityCombo;
    private javax.swing.JRadioButton jRadioBtnFemale;
    private javax.swing.JRadioButton jRadioBtnMale;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHealthPlanId;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNeighborhood;
    private javax.swing.JComboBox<String> neighborhoodCombo;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtDOB;
    private javax.swing.JTextField txtHealthPlanId;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
